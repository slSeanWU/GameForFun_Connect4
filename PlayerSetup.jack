/* 	This is part of a Connect 4 game made for educational purposes
	as Project 09 of the Nand2Tetris course.
	
	Written by Slayorious */
	
/** 
	Implements the player options screen where the players can
	select who goes first and who plays with which color tokens.
*/

class PlayerSetup
{
	field Player player;
	field int selected;
	field Token token;
	
	constructor PlayerSetup new(Player player1)
	{
		let player = player1;
		let selected = 0;
		let token = Token.new(0);
		
		return this;
	}
	
	// Runs the player options screen the user interacts with.
	method void run()
	{
		do PlayerSetup.drawSetupScreen(player.getOrder(), token, selected);
		
		do Sys.wait(300);
		
		while (~(Keyboard.keyPressed() = 140))
		{
			// Moves the selection box down to color selection.
			if ((Keyboard.keyPressed() = 133) & (selected = 0))
			{
				let selected = 1;
				do PlayerSetup.drawSelection(selected);
				do Sys.wait(300);
			}
			// Moves the selection box up to order selection.
			if ((Keyboard.keyPressed() = 131) & (selected = 1))
			{
				let selected = 0;
				do PlayerSetup.drawSelection(selected);
				do Sys.wait(300);
			}
			// Swaps the order of the players.
			if ((Keyboard.keyPressed() = 128) & (selected = 0))
			{
				if (player.getOrder() = 0)
				{
					do player.setOrder(1);
					do PlayerSetup.drawOrder(player.getOrder());
				}
				else
				{
					do player.setOrder(0);
					do PlayerSetup.drawOrder(player.getOrder());
				}
				do Sys.wait(300);
			}
			// Swaps the colors of the players.
			if ((Keyboard.keyPressed() = 128) & (selected = 1))
			{
				if (player.getColor() = 0)
				{
					do player.setColor(1);
					do token.setColor(1);
					do PlayerSetup.drawColor(token);
				}
				else
				{
					do player.setColor(0);
					do token.setColor(0);
					do PlayerSetup.drawColor(token);
				}
				do Sys.wait(300);
			}
			do Sys.wait(10);
		}
		
		return;
	}
	
	// Draws all the elements of the setup screen.
	function void drawSetupScreen(int o, Token t, int s)
	{
		do Screen.clearScreen();
		
		do Output.moveCursor(3,26);
		do OutputUtil.printStringConst("Player Setup");
		do Output.moveCursor(6,12);
		do OutputUtil.printStringConst("Player 1                        Player 2");
		do Output.moveCursor(8,29);
		do OutputUtil.printStringConst("Order");
		do PlayerSetup.drawOrder(o);
		do Output.moveCursor(12,29);
		do OutputUtil.printStringConst("Color");
		do PlayerSetup.drawColor(t);
		do Output.moveCursor(18,15);
		do OutputUtil.printStringConst("Press Enter to swap order or color");
		do Output.moveCursor(19,14);
		do OutputUtil.printStringConst("Press Esc to return to the main menu");
		do PlayerSetup.drawSelection(s);
		
		return;
	}
	
	// Draws the player order options.
	function void drawOrder(int o)
	{
		if (o = 0)
		{
			do Output.moveCursor(10,13);
			do OutputUtil.printStringConst("First                           Second");
		}
		else
		{
			do Output.moveCursor(10,13);
			do OutputUtil.printStringConst("Second                          First ");
		}
		
		return;
	}
	
	// Draws the player token options.
	function void drawColor(Token t)
	{
		if (t.getColor() = 0)
		{
			do t.drawToken(127, 160);
			do t.setColor(1);
			do t.drawToken(385, 160);
			do t.setColor(0);
		}
		else
		{
			do t.drawToken(127, 160);
			do t.setColor(0);
			do t.drawToken(385, 160);
			do t.setColor(1);
		}
		
		return;
	}
	
	// Draws the selection box.
	function void drawSelection(int s)
	{
		var int a, b, c, d, e, f, g, h;
		
		let a = 100;
		let b = 151;
		let c = 412;
		let d = 169;
		
		let e = 100;
		let f = 106;
		let g = 412;
		let h = 124;
		
		if (s = 0)
		{
			// Clear previous selection.
			do Screen.setColor(false);
			do Screen.drawLine(a, b, c, b);
			do Screen.drawLine(a, b, a, d);
			do Screen.drawLine(a, d, c, d);
			do Screen.drawLine(c, b, c, d);
			
			// Draw selection over player order.
			do Screen.setColor(true);
			do Screen.drawLine(e, f, g, f);
			do Screen.drawLine(e, f, e, h);
			do Screen.drawLine(e, h, g, h);
			do Screen.drawLine(g, f, g, h);
		}
		else
		{
			// Draw new selection.
			do Screen.setColor(false);
			do Screen.drawLine(e, f, g, f);
			do Screen.drawLine(e, f, e, h);
			do Screen.drawLine(e, h, g, h);
			do Screen.drawLine(g, f, g, h);
			
			// Draw selection over player color.
			do Screen.setColor(true);
			do Screen.drawLine(a, b, c, b);
			do Screen.drawLine(a, b, a, d);
			do Screen.drawLine(a, d, c, d);
			do Screen.drawLine(c, b, c, d);
		}
		
		return;
	}
	
	method void dispose()
	{
		do token.dispose();
		do Memory.deAlloc(this);
		return;
	}
}