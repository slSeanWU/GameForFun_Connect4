function AI.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 4
push constant 0
pop this 3
push argument 1
pop this 2
push constant 7
call Array.new 1
pop this 1
push constant 0
push this 1
add
push constant 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 1
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 1
add
push constant 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 1
add
push constant 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push this 1
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push this 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push this 1
add
push constant 6
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
pop this 0
push pointer 0
return
function AI.decided 3
push argument 0
pop pointer 0
push argument 1
pop this 2
push this 2
call Grid.getSteps 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 3
return
label IF_FALSE0
push pointer 0
push this 0
call AI.Win 2
pop local 0
push local 0
push constant 7
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
return
goto IF_END1
label IF_FALSE1
push pointer 0
call AI.BlockHorTwo 1
pop local 0
push local 0
push constant 7
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
return
label IF_FALSE2
push pointer 0
call AI.blockOppo 1
pop local 2
push local 2
push constant 7
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 2
return
goto IF_END3
label IF_FALSE3
push this 2
call Grid.getSteps 1
push constant 2
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
push this 4
call AI.rand 2
return
goto IF_END4
label IF_FALSE4
push pointer 0
call AI.wannaWin 1
pop local 0
push local 0
push constant 7
lt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 0
return
label IF_FALSE5
label IF_END4
push constant 0
pop local 0
label WHILE_EXP0
push this 2
push local 0
push this 1
add
pop pointer 1
push that 0
call Grid.legal 2
not
not
if-goto WHILE_END0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 0
push this 1
add
pop pointer 1
push that 0
return
label IF_END3
label IF_END1
function AI.blockOppo 1
push argument 0
pop pointer 0
push this 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 2
pop local 0
goto IF_END0
label IF_FALSE0
push constant 1
pop local 0
label IF_END0
push pointer 0
push local 0
call AI.Win 2
return
function AI.BlockHorTwo 3
push argument 0
pop pointer 0
push this 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 2
pop local 2
goto IF_END0
label IF_FALSE0
push constant 1
pop local 2
label IF_END0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 7
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push constant 6
lt
not
if-goto WHILE_END1
push this 2
push local 0
push local 1
call Grid.getRec 3
push local 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 6
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push local 0
push local 1
push local 2
call AI.judgeHor 4
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push constant 0
gt
push this 2
push local 0
push constant 1
sub
push local 1
call Grid.getRec 3
push constant 0
eq
and
push this 2
push local 0
push constant 1
sub
call Grid.getStack 2
push local 1
eq
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
push constant 1
sub
return
label IF_FALSE4
push local 0
push constant 2
add
push constant 7
lt
push this 2
push local 0
push constant 2
add
push local 1
call Grid.getRec 3
push constant 0
eq
and
push this 2
push local 0
push constant 2
add
call Grid.getStack 2
push local 1
eq
and
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 0
push constant 2
add
return
label IF_FALSE5
label IF_FALSE3
label IF_FALSE2
label IF_FALSE1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 7
return
function AI.judgeHor 0
push argument 0
pop pointer 0
push this 2
push argument 1
push argument 2
call Grid.getRec 3
push argument 3
eq
push this 2
push argument 1
push constant 1
add
push argument 2
call Grid.getRec 3
push argument 3
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function AI.judgeVert 0
push argument 0
pop pointer 0
push this 2
push argument 1
push argument 2
call Grid.getRec 3
push argument 3
eq
push this 2
push argument 1
push argument 2
push constant 1
add
call Grid.getRec 3
push argument 3
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function AI.judgeDiaLeft 0
push argument 0
pop pointer 0
push this 2
push argument 1
push argument 2
call Grid.getRec 3
push argument 3
eq
push this 2
push argument 1
push constant 1
sub
push argument 2
push constant 1
add
call Grid.getRec 3
push argument 3
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function AI.judgeDiaRight 0
push argument 0
pop pointer 0
push this 2
push argument 1
push argument 2
call Grid.getRec 3
push argument 3
eq
push this 2
push argument 1
push constant 1
add
push argument 2
push constant 1
add
call Grid.getRec 3
push argument 3
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function AI.PossibleToWin 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 7
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push constant 6
lt
not
if-goto WHILE_END1
push this 2
push local 0
push local 1
call Grid.getRec 3
push argument 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 6
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push local 0
push local 1
push argument 1
call AI.judgeHor 4
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push constant 0
gt
push this 2
push local 0
push constant 1
sub
push local 1
call Grid.getRec 3
push constant 0
eq
and
push this 2
push local 0
push constant 1
sub
call Grid.getStack 2
push local 1
eq
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push constant 1
sub
return
label IF_FALSE3
push local 0
push constant 2
add
push constant 7
lt
push this 2
push local 0
push constant 2
add
push local 1
call Grid.getRec 3
push constant 0
eq
and
push this 2
push local 0
push constant 2
add
call Grid.getStack 2
push local 1
eq
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
push constant 2
add
return
label IF_FALSE4
label IF_FALSE2
label IF_FALSE1
push local 1
push constant 4
lt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push pointer 0
push local 0
push local 1
push argument 1
call AI.judgeVert 4
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 1
push constant 1
add
push constant 4
lt
push this 2
push local 0
push local 1
push constant 2
add
call Grid.getRec 3
push constant 0
eq
and
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 0
return
label IF_FALSE7
label IF_FALSE6
label IF_FALSE5
push local 0
push constant 5
lt
push local 1
push constant 4
lt
and
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push pointer 0
push local 0
push local 1
push argument 1
call AI.judgeDiaRight 4
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push local 0
push constant 1
add
push constant 5
lt
push local 1
push constant 1
add
push constant 4
lt
and
push this 2
push local 0
push constant 2
add
push local 1
push constant 2
add
call Grid.getRec 3
push constant 0
eq
and
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push local 0
push constant 2
add
return
label IF_FALSE10
label IF_FALSE9
label IF_FALSE8
push local 0
push constant 1
gt
push local 1
push constant 1
gt
and
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push pointer 0
push local 0
push local 1
push argument 1
call AI.judgeDiaLeft 4
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push local 0
push constant 1
sub
push constant 1
gt
push local 1
push constant 1
add
push constant 4
lt
and
push this 2
push local 0
push constant 2
sub
push local 1
push constant 2
add
call Grid.getRec 3
push constant 0
eq
and
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push local 0
push constant 2
sub
return
label IF_FALSE13
label IF_FALSE12
label IF_FALSE11
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 7
return
function AI.Win 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 7
lt
not
if-goto WHILE_END0
push this 2
push constant 1
call Grid.setTest 2
pop temp 0
push this 2
push local 0
push this 2
push local 0
call Grid.getStack 2
push argument 1
call Grid.setRec 4
pop temp 0
push this 2
push local 0
push this 2
push local 0
call Grid.getStack 2
push constant 1
add
call Grid.setStack 3
pop temp 0
push pointer 0
push argument 1
call AI.checkWin 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push constant 0
call Grid.setTest 2
pop temp 0
push this 2
push local 0
push this 2
push local 0
call Grid.getStack 2
push constant 1
sub
call Grid.setStack 3
pop temp 0
push this 2
push local 0
push this 2
push local 0
call Grid.getStack 2
push constant 0
call Grid.setRec 4
pop temp 0
push local 0
return
label IF_FALSE0
push this 2
push constant 0
call Grid.setTest 2
pop temp 0
push this 2
push local 0
push this 2
push local 0
call Grid.getStack 2
push constant 1
sub
call Grid.setStack 3
pop temp 0
push this 2
push local 0
push this 2
push local 0
call Grid.getStack 2
push constant 0
call Grid.setRec 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 7
return
function AI.wannaWin 1
push argument 0
pop pointer 0
push pointer 0
push this 0
call AI.PossibleToWin 2
pop local 0
push local 0
push constant 7
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 0
call AI.ThinkTwice 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
return
label IF_FALSE1
label IF_FALSE0
push constant 7
return
function AI.ThinkTwice 2
push argument 0
pop pointer 0
push this 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 2
pop local 1
goto IF_END0
label IF_FALSE0
push constant 1
pop local 1
label IF_END0
push this 2
push constant 1
call Grid.setTest 2
pop temp 0
push this 2
push argument 1
push this 2
push argument 1
call Grid.getStack 2
push this 0
call Grid.setRec 4
pop temp 0
push this 2
push argument 1
push this 2
push argument 1
call Grid.getStack 2
push constant 1
add
call Grid.setStack 3
pop temp 0
push pointer 0
push local 1
call AI.Win 2
pop local 0
push local 0
push constant 7
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
push constant 0
call Grid.setTest 2
pop temp 0
push this 2
push argument 1
push this 2
push argument 1
call Grid.getStack 2
push constant 1
sub
call Grid.setStack 3
pop temp 0
push this 2
push argument 1
push this 2
push argument 1
call Grid.getStack 2
push constant 0
call Grid.setRec 4
pop temp 0
push constant 0
not
return
label IF_FALSE1
push this 2
push constant 0
call Grid.setTest 2
pop temp 0
push this 2
push argument 1
push this 2
push argument 1
call Grid.getStack 2
push constant 1
sub
call Grid.setStack 3
pop temp 0
push this 2
push argument 1
push this 2
push argument 1
call Grid.getStack 2
push constant 0
call Grid.setRec 4
pop temp 0
push constant 0
return
function AI.checkCrash 0
push argument 0
pop pointer 0
push this 3
return
function AI.crashMessage 0
push argument 0
pop pointer 0
push constant 1
pop this 3
push constant 6
push constant 9
call Output.moveCursor 2
pop temp 0
push constant 40
call String.new 1
push constant 79
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 33
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 73
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 65
call String.appendChar 2
push constant 73
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 119
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 70
call String.appendChar 2
push constant 120
call String.appendChar 2
push constant 120
call String.appendChar 2
push constant 107
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 112
call String.appendChar 2
call Output.printString 1
pop temp 0
push constant 0
return
function AI.rand 1
push argument 0
pop pointer 0
push argument 1
push argument 1
push constant 7
call Math.divide 2
sub
pop local 0
label WHILE_EXP0
push this 2
push local 0
push this 1
add
pop pointer 1
push that 0
call Grid.getStack 2
push constant 5
gt
not
if-goto WHILE_END0
push local 0
push constant 1
add
pop local 0
push local 0
push constant 6
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 7
sub
pop local 0
label IF_FALSE0
goto WHILE_EXP0
label WHILE_END0
push local 0
push this 1
add
pop pointer 1
push that 0
return
function AI.seedIncrease 0
push argument 0
pop pointer 0
push this 4
push constant 1
add
pop this 4
push this 4
push constant 6
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 4
push constant 7
sub
pop this 4
label IF_FALSE0
push constant 0
return
function AI.checkWin 2
push argument 0
pop pointer 0
push this 2
push constant 1
call Grid.setTest 2
pop temp 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 7
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push constant 6
lt
not
if-goto WHILE_END1
push this 2
push local 0
push local 1
call Grid.getRec 3
push argument 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 3
lt
push local 1
push constant 3
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
push local 0
push local 1
push argument 1
call Grid.judgeHor 4
push this 2
push local 0
push local 1
push argument 1
call Grid.judgeVert 4
or
push this 2
push local 0
push local 1
push argument 1
call Grid.judgeDiaRight 4
or
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 2
push constant 0
call Grid.setTest 2
pop temp 0
push constant 0
not
return
label IF_FALSE2
label IF_FALSE1
push local 0
push constant 3
eq
push local 1
push constant 3
lt
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 2
push local 0
push local 1
push argument 1
call Grid.judgeHor 4
push this 2
push local 0
push local 1
push argument 1
call Grid.judgeVert 4
or
push this 2
push local 0
push local 1
push argument 1
call Grid.judgeDiaRight 4
or
push this 2
push local 0
push local 1
push argument 1
call Grid.judgeDiaLeft 4
or
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 2
push constant 0
call Grid.setTest 2
pop temp 0
push constant 0
not
return
label IF_FALSE4
label IF_FALSE3
push local 0
push constant 3
gt
push local 1
push constant 3
lt
and
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 2
push local 0
push local 1
push argument 1
call Grid.judgeVert 4
push this 2
push local 0
push local 1
push argument 1
call Grid.judgeDiaLeft 4
or
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 2
push constant 0
call Grid.setTest 2
pop temp 0
push constant 0
not
return
label IF_FALSE6
label IF_FALSE5
push local 0
push constant 4
lt
push local 1
push constant 2
gt
and
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 2
push local 0
push local 1
push argument 1
call Grid.judgeHor 4
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push this 2
push constant 0
call Grid.setTest 2
pop temp 0
push constant 0
not
return
label IF_FALSE8
label IF_FALSE7
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 2
push constant 0
call Grid.setTest 2
pop temp 0
push constant 0
return
function AI.Brute_force 6
push argument 0
pop pointer 0
push this 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 2
pop local 4
goto IF_END0
label IF_FALSE0
push constant 1
pop local 4
label IF_END0
push constant 7
pop local 5
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 7
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push constant 7
lt
not
if-goto WHILE_END1
push constant 0
pop local 2
label WHILE_EXP2
push local 2
push constant 7
lt
not
if-goto WHILE_END2
push constant 0
pop local 3
label WHILE_EXP3
push local 3
push constant 7
lt
not
if-goto WHILE_END3
push this 2
push constant 1
call Grid.setTest 2
pop temp 0
push this 2
push local 0
push this 2
push local 0
call Grid.getStack 2
push this 0
call Grid.setRec 4
pop temp 0
push this 2
push local 0
push this 2
push local 0
call Grid.getStack 2
push constant 1
add
call Grid.setStack 3
pop temp 0
push pointer 0
push this 0
call AI.checkWin 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
push local 0
push this 2
push local 0
call Grid.getStack 2
push constant 1
sub
call Grid.setStack 3
pop temp 0
push this 2
push local 0
push this 2
push local 0
call Grid.getStack 2
push constant 0
call Grid.setRec 4
pop temp 0
push this 2
push constant 0
call Grid.setTest 2
pop temp 0
push local 0
return
label IF_FALSE1
push this 2
push local 1
push this 2
push local 1
call Grid.getStack 2
push local 4
call Grid.setRec 4
pop temp 0
push this 2
push local 1
push this 2
push local 1
call Grid.getStack 2
push constant 1
add
call Grid.setStack 3
pop temp 0
push pointer 0
push local 4
call AI.checkWin 2
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 2
push local 2
push this 2
push local 2
call Grid.getStack 2
push this 0
call Grid.setRec 4
pop temp 0
push this 2
push local 2
push this 2
push local 2
call Grid.getStack 2
push constant 1
add
call Grid.setStack 3
pop temp 0
push pointer 0
push this 0
call AI.checkWin 2
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 2
push local 0
push this 2
push local 0
call Grid.getStack 2
push constant 1
sub
call Grid.setStack 3
pop temp 0
push this 2
push local 0
push this 2
push local 0
call Grid.getStack 2
push constant 0
call Grid.setRec 4
pop temp 0
push this 2
push local 1
push this 2
push local 1
call Grid.getStack 2
push constant 1
sub
call Grid.setStack 3
pop temp 0
push this 2
push local 1
push this 2
push local 1
call Grid.getStack 2
push constant 0
call Grid.setRec 4
pop temp 0
push this 2
push local 2
push this 2
push local 2
call Grid.getStack 2
push constant 1
sub
call Grid.setStack 3
pop temp 0
push this 2
push local 2
push this 2
push local 2
call Grid.getStack 2
push constant 0
call Grid.setRec 4
pop temp 0
push this 2
push constant 0
call Grid.setTest 2
pop temp 0
push local 0
return
label IF_FALSE3
push this 2
push local 3
push this 2
push local 3
call Grid.getStack 2
push local 4
call Grid.setRec 4
pop temp 0
push this 2
push local 3
push this 2
push local 3
call Grid.getStack 2
push constant 1
add
call Grid.setStack 3
pop temp 0
push pointer 0
push local 4
call AI.checkWin 2
not
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
pop local 5
label IF_FALSE4
push this 2
push local 0
push this 2
push local 0
call Grid.getStack 2
push constant 1
sub
call Grid.setStack 3
pop temp 0
push this 2
push local 0
push this 2
push local 0
call Grid.getStack 2
push constant 0
call Grid.setRec 4
pop temp 0
push this 2
push local 1
push this 2
push local 1
call Grid.getStack 2
push constant 1
sub
call Grid.setStack 3
pop temp 0
push this 2
push local 1
push this 2
push local 1
call Grid.getStack 2
push constant 0
call Grid.setRec 4
pop temp 0
push this 2
push local 2
push this 2
push local 2
call Grid.getStack 2
push constant 1
sub
call Grid.setStack 3
pop temp 0
push this 2
push local 2
push this 2
push local 2
call Grid.getStack 2
push constant 0
call Grid.setRec 4
pop temp 0
push this 2
push local 3
push this 2
push local 3
call Grid.getStack 2
push constant 1
sub
call Grid.setStack 3
pop temp 0
push this 2
push local 3
push this 2
push local 3
call Grid.getStack 2
push constant 0
call Grid.setRec 4
pop temp 0
push this 2
push constant 0
call Grid.setTest 2
pop temp 0
goto IF_END2
label IF_FALSE2
push this 2
push local 0
push this 2
push local 0
call Grid.getStack 2
push constant 1
sub
call Grid.setStack 3
pop temp 0
push this 2
push local 0
push this 2
push local 0
call Grid.getStack 2
push constant 0
call Grid.setRec 4
pop temp 0
push this 2
push local 1
push this 2
push local 1
call Grid.getStack 2
push constant 1
sub
call Grid.setStack 3
pop temp 0
push this 2
push local 1
push this 2
push local 1
call Grid.getStack 2
push constant 0
call Grid.setRec 4
pop temp 0
push this 2
push constant 0
call Grid.setTest 2
pop temp 0
label IF_END2
push this 2
push constant 0
call Grid.setTest 2
pop temp 0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP3
label WHILE_END3
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP2
label WHILE_END2
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 5
return
