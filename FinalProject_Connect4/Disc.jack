class Disc{
	field int color;
	
	constructor Disc new(int c){
		let color = c;
		return this;
	}
	
	function void winningAnima(int c, int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4){
		var Disc tmp;
		var int i;
		
		let tmp = Disc.new(c);
		let i = 0;
		
		while( i < 3 ){
			do Sys.wait(300);
			do tmp.eraseDisc(x1, y1);
			do tmp.eraseDisc(x2, y2);
			do tmp.eraseDisc(x3, y3);
			do tmp.eraseDisc(x4, y4);
			
			do Sys.wait(300);
			do tmp.drawDisc(x1, y1);
			do tmp.drawDisc(x2, y2);
			do tmp.drawDisc(x3, y3);
			do tmp.drawDisc(x4, y4);
			
			let i = i + 1;
		}
		
		do tmp.clear();
		return;
	}
	
	method void drawDisc(int col, int row){
		var int x, y;
		let x = 143 + (col*26);
		let y = 193 - (row*26);
		
		if( color = 2 ){
			do Screen.setColor(true);
			do Screen.drawCircle(x, y, 11);
			do Screen.setColor(false);
			do Screen.drawCircle(x, y, 10);
			do Screen.setColor(true);
			do Screen.drawCircle(x, y, 9);
			do Screen.setColor(false);
			do Screen.drawCircle(x, y, 7);
		}
		else{
			do Screen.setColor(true);
			do Screen.drawCircle(x, y, 11);
			do Screen.setColor(false);
			do Screen.drawCircle(x, y, 9);
			do Screen.setColor(true);
			do Screen.drawCircle(x, y, 8);
		}
		
		return;
	}
	
	method void eraseDisc(int col, int row){
		var int x, y;
		let x = 143 + (col*26);
		let y = 193 - (row*26);
		
		do Screen.setColor(false);
		do Screen.drawCircle(x, y, 11);
		
		return;
	}
	
	method void clear(){
		do Memory.deAlloc(this);
		return;
	}
}