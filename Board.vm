function Board.new 0
push constant 6
call Memory.alloc 1
pop pointer 0
push constant 0
call Token.new 1
pop this 0
push constant 7
push constant 6
call Matrix.new 2
pop this 1
push constant 22
pop this 2
push constant 9
pop this 3
push this 2
push constant 2
push this 3
call Math.multiply 2
sub
push constant 2
call Math.divide 2
pop this 4
push constant 6
pop this 5
push pointer 0
return
function Board.drawBoard 8
push argument 0
pop pointer 0
push constant 256
push this 2
push constant 3
call Math.multiply 2
sub
push this 2
push constant 2
call Math.divide 2
sub
pop local 2
push constant 128
push this 2
push constant 3
call Math.multiply 2
sub
push this 5
add
pop local 3
push local 2
push this 4
sub
pop local 4
push local 3
push this 4
sub
pop local 5
push constant 512
push local 2
sub
push this 4
add
pop local 6
push constant 256
push local 3
sub
push this 4
add
push constant 2
push this 5
call Math.multiply 2
add
pop local 7
push local 4
push local 5
push local 6
push local 5
call Screen.drawLine 4
pop temp 0
push local 4
push local 5
push local 4
push local 7
call Screen.drawLine 4
pop temp 0
push local 4
push local 7
push local 6
push local 7
call Screen.drawLine 4
pop temp 0
push local 6
push local 5
push local 6
push local 7
call Screen.drawLine 4
pop temp 0
push constant 0
pop local 0
push constant 256
push this 2
push constant 3
call Math.multiply 2
sub
pop local 2
label WHILE_EXP0
push local 0
push constant 7
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
push constant 128
push this 2
push constant 3
call Math.multiply 2
sub
push this 2
push constant 2
call Math.divide 2
add
push this 5
add
pop local 3
label WHILE_EXP1
push local 1
push constant 6
lt
not
if-goto WHILE_END1
push local 2
push local 3
push this 3
call Screen.drawCircle 3
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push local 2
push local 3
push this 3
push constant 1
sub
call Screen.drawCircle 3
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 3
push this 2
add
pop local 3
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 2
push this 2
add
pop local 2
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.dropToken 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push pointer 0
push argument 1
push local 0
call Board.isEmpty 3
not
if-goto WHILE_END0
push pointer 0
push argument 1
push local 0
call Board.eraseToken 3
pop temp 0
push local 0
push constant 1
add
pop local 0
push pointer 0
push argument 1
push local 0
push argument 2
call Board.drawToken 4
pop temp 0
push constant 200
call Sys.wait 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push this 1
push argument 1
push local 0
push constant 1
sub
push argument 2
push constant 1
add
call Matrix.set 4
pop temp 0
push constant 0
return
function Board.drawToken 2
push argument 0
pop pointer 0
push constant 256
push this 2
push constant 3
call Math.multiply 2
sub
push this 2
push argument 1
call Math.multiply 2
add
pop local 0
push argument 2
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 128
push this 2
push constant 4
call Math.multiply 2
sub
push this 2
push constant 2
call Math.divide 2
add
push this 5
add
push this 4
sub
pop local 1
goto IF_END0
label IF_FALSE0
push constant 128
push this 2
push constant 4
call Math.multiply 2
sub
push this 2
push constant 2
call Math.divide 2
add
push this 5
add
push this 2
push argument 2
call Math.multiply 2
add
pop local 1
label IF_END0
push this 0
push argument 3
call Token.setColor 2
pop temp 0
push this 0
push local 0
push local 1
call Token.drawToken 3
pop temp 0
push constant 0
return
function Board.eraseToken 2
push argument 0
pop pointer 0
push constant 256
push this 2
push constant 3
call Math.multiply 2
sub
push this 2
push argument 1
call Math.multiply 2
add
pop local 0
push argument 2
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 128
push this 2
push constant 4
call Math.multiply 2
sub
push this 2
push constant 2
call Math.divide 2
add
push this 5
add
push this 4
sub
pop local 1
goto IF_END0
label IF_FALSE0
push constant 128
push this 2
push constant 4
call Math.multiply 2
sub
push this 2
push constant 2
call Math.divide 2
add
push this 5
add
push this 2
push argument 2
call Math.multiply 2
add
pop local 1
label IF_END0
push constant 0
call Screen.setColor 1
pop temp 0
push local 0
push local 1
push this 3
push constant 1
sub
call Screen.drawCircle 3
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
return
function Board.isEmpty 0
push argument 0
pop pointer 0
push argument 2
push constant 6
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 1
push argument 1
push argument 2
call Matrix.get 3
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
goto IF_END1
label IF_FALSE1
push constant 0
return
label IF_END1
function Board.isWinner 3
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 7
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push constant 6
lt
not
if-goto WHILE_END1
push this 1
push local 0
push local 1
call Matrix.get 3
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push constant 3
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push local 0
push local 1
call Board.checkLeftHorizontal 3
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
return
label IF_FALSE3
push pointer 0
push local 0
push local 1
call Board.checkRightHorizontal 3
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
not
return
label IF_FALSE4
push pointer 0
push local 0
push local 1
call Board.checkDownLeftDiagonal 3
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
return
label IF_FALSE5
push pointer 0
push local 0
push local 1
call Board.checkDownRightDiagonal 3
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
not
return
label IF_FALSE6
push pointer 0
push local 0
push local 1
call Board.checkDownVertical 3
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 0
not
return
label IF_FALSE7
label IF_FALSE2
push local 0
push constant 3
lt
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push pointer 0
push local 0
push local 1
call Board.checkRightHorizontal 3
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push constant 0
not
return
label IF_FALSE9
push pointer 0
push local 0
push local 1
call Board.checkDownRightDiagonal 3
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 0
not
return
label IF_FALSE10
push pointer 0
push local 0
push local 1
call Board.checkDownVertical 3
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push constant 0
not
return
label IF_FALSE11
label IF_FALSE8
push local 0
push constant 3
gt
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push pointer 0
push local 0
push local 1
call Board.checkLeftHorizontal 3
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push constant 0
not
return
label IF_FALSE13
push pointer 0
push local 0
push local 1
call Board.checkDownLeftDiagonal 3
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push constant 0
not
return
label IF_FALSE14
push pointer 0
push local 0
push local 1
call Board.checkDownVertical 3
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push constant 0
not
return
label IF_FALSE15
label IF_FALSE12
label IF_FALSE1
push local 1
push constant 2
gt
if-goto IF_TRUE16
goto IF_FALSE16
label IF_TRUE16
push local 0
push constant 3
eq
if-goto IF_TRUE17
goto IF_FALSE17
label IF_TRUE17
push pointer 0
push local 0
push local 1
call Board.checkRightHorizontal 3
if-goto IF_TRUE18
goto IF_FALSE18
label IF_TRUE18
push constant 0
not
return
label IF_FALSE18
push pointer 0
push local 0
push local 1
call Board.checkLeftHorizontal 3
if-goto IF_TRUE19
goto IF_FALSE19
label IF_TRUE19
push constant 0
not
return
label IF_FALSE19
label IF_FALSE17
push local 0
push constant 3
lt
if-goto IF_TRUE20
goto IF_FALSE20
label IF_TRUE20
push pointer 0
push local 0
push local 1
call Board.checkRightHorizontal 3
if-goto IF_TRUE21
goto IF_FALSE21
label IF_TRUE21
push constant 0
not
return
label IF_FALSE21
label IF_FALSE20
push local 0
push constant 3
gt
if-goto IF_TRUE22
goto IF_FALSE22
label IF_TRUE22
push pointer 0
push local 0
push local 1
call Board.checkLeftHorizontal 3
if-goto IF_TRUE23
goto IF_FALSE23
label IF_TRUE23
push constant 0
not
return
label IF_FALSE23
label IF_FALSE22
label IF_FALSE16
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.checkLeftHorizontal 0
push argument 0
pop pointer 0
push this 1
push argument 1
push argument 2
call Matrix.get 3
push this 1
push argument 1
push constant 1
sub
push argument 2
call Matrix.get 3
eq
push this 1
push argument 1
push argument 2
call Matrix.get 3
push this 1
push argument 1
push constant 2
sub
push argument 2
call Matrix.get 3
eq
and
push this 1
push argument 1
push argument 2
call Matrix.get 3
push this 1
push argument 1
push constant 3
sub
push argument 2
call Matrix.get 3
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Board.checkRightHorizontal 0
push argument 0
pop pointer 0
push this 1
push argument 1
push argument 2
call Matrix.get 3
push this 1
push argument 1
push constant 1
add
push argument 2
call Matrix.get 3
eq
push this 1
push argument 1
push argument 2
call Matrix.get 3
push this 1
push argument 1
push constant 2
add
push argument 2
call Matrix.get 3
eq
and
push this 1
push argument 1
push argument 2
call Matrix.get 3
push this 1
push argument 1
push constant 3
add
push argument 2
call Matrix.get 3
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Board.checkDownVertical 0
push argument 0
pop pointer 0
push this 1
push argument 1
push argument 2
call Matrix.get 3
push this 1
push argument 1
push argument 2
push constant 1
add
call Matrix.get 3
eq
push this 1
push argument 1
push argument 2
call Matrix.get 3
push this 1
push argument 1
push argument 2
push constant 2
add
call Matrix.get 3
eq
and
push this 1
push argument 1
push argument 2
call Matrix.get 3
push this 1
push argument 1
push argument 2
push constant 3
add
call Matrix.get 3
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Board.checkDownLeftDiagonal 0
push argument 0
pop pointer 0
push this 1
push argument 1
push argument 2
call Matrix.get 3
push this 1
push argument 1
push constant 1
sub
push argument 2
push constant 1
add
call Matrix.get 3
eq
push this 1
push argument 1
push argument 2
call Matrix.get 3
push this 1
push argument 1
push constant 2
sub
push argument 2
push constant 2
add
call Matrix.get 3
eq
and
push this 1
push argument 1
push argument 2
call Matrix.get 3
push this 1
push argument 1
push constant 3
sub
push argument 2
push constant 3
add
call Matrix.get 3
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Board.checkDownRightDiagonal 0
push argument 0
pop pointer 0
push this 1
push argument 1
push argument 2
call Matrix.get 3
push this 1
push argument 1
push constant 1
add
push argument 2
push constant 1
add
call Matrix.get 3
eq
push this 1
push argument 1
push argument 2
call Matrix.get 3
push this 1
push argument 1
push constant 2
add
push argument 2
push constant 2
add
call Matrix.get 3
eq
and
push this 1
push argument 1
push argument 2
call Matrix.get 3
push this 1
push argument 1
push constant 3
add
push argument 2
push constant 3
add
call Matrix.get 3
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Board.reset 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 7
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push constant 6
lt
not
if-goto WHILE_END1
push this 1
push local 0
push local 1
push constant 0
call Matrix.set 4
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.dispose 0
push argument 0
pop pointer 0
push this 0
call Token.dispose 1
pop temp 0
push this 1
call Matrix.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
